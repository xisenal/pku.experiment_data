[38.70894182932176, 79.50777912217023, 120.43914637124237, 157.11936040914063, 189.97659494058757, 320.27393113246575, 329.4184981118973, 353.4777824724976, 382.35911831723513, 406.3164565576634, 491.4414669013128, 640.5376676529143, 645.3087460769656, 659.4180891087752, 678.1455913843781, 693.9880184591123, 807.3622987024327, 960.8115987853799, 964.012706958782, 973.7791452712629, 987.1544762378339, 998.6030255331535]


#弦链实验程序；
import numpy as np
from tqdm import trange

def T_mesh(p):
   A=np.array([[np.cos(p),np.sin(p)],[-np.sin(p),np.cos(p)]])
   return A

#设置参数：
tau=0
m_b=0.106*10**-3
mu_0=0.000549
a_num=0.2
ita=m_b/(mu_0*a_num)
F_T=9.01

#设置求解区间：
delta=np.linspace(0,10,100000)
nope=[]
ans=[]
for i in trange(100000):
   delta_num=delta[i]
   phi=np.array([0,1])
   phi=phi.T
   M=np.array([[1,0],[-ita*delta_num,1]])
   phi=T_mesh(delta_num*(1-tau))@M@T_mesh(delta_num*tau)@phi
   phi=T_mesh(delta_num*(2-tau-np.floor(2-tau)))@M@T_mesh(delta_num*(np.floor(2-tau)-2+tau+1))@phi
   phi=T_mesh(delta_num*(3-tau-np.floor(3-tau)))@M@T_mesh(delta_num*(np.floor(3-tau)-3+tau+1))@phi
   phi=T_mesh(delta_num*(4-tau-np.floor(4-tau)))@M@T_mesh(delta_num*(np.floor(4-tau)-4+tau+1))@phi
   phi=T_mesh(delta_num*(5-tau-np.floor(5-tau)))@M@T_mesh(delta_num*(np.floor(5-tau)-5+tau+1))@phi
   phi=T_mesh(delta_num*(6-tau-np.floor(6-tau)))@M@T_mesh(delta_num*(np.floor(6-tau)-6+tau+1))@phi
#   phi=T_mesh(delta_num*(7-tau-np.floor(7-tau)))@M@T_mesh(delta_num*(np.floor(7-tau)-7+tau+1))@phi
   nope.append(abs(phi[0]))

range_by=np.arange(1,100000-1)
for i in range_by:
    if nope[i-1]>nope[i] and nope[i]<nope[i+1]:
        ans.append(delta[i])
pop=np.sqrt(F_T/(mu_0*a_num**2))/(2*np.pi)
for i in range(len(ans)):
   ans[i]=ans[i]*pop
print(ans)